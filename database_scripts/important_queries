//Deletes Entire Database!!!!!

MATCH(n:)-[:b]-()
DELETE n,b

***** Deletes Existing Schema *****

MATCH (n:Concept), (e:Entanglement), (q:Qualia)
DETACH DELETE n, e, q;


MATCH (n:Concept)
DELETE n


***** Get the Qualia Approved Properties *****

MATCH (q:Concept{label_name:'Qualia'})-[:approved_qualia]->(qq:Qualia)
RETURN DISTINCT collect(qq)

***** Get all Database Concepts *****
MATCH (c:Concept)
RETURN DISTINCT collect(c.label_name)


***** Matches the entire Entanglement Form *****

MATCH (source:Concept)<-[:source_concept]-(e:Entanglement)-[:target_concept]->(target:Concept)
RETURN collect({
  type:e.db_type,
  cardinality:e.cardinality,
  creator:e.creator,
  source:source.label_name,
  target:target.label_name})

***** Provides an Ordered list of how frequently I perceive things ******
MATCH (user:Atman)<-[:performed_by]-(med:Meditation_Instance)-[:perceived]->(exp:Experience)-[:best_maps_to]->(per:Perception)
WHERE user.first_name = 'Noah'
RETURN distinct count(per.display_name), per.display_name
ORDER BY count(per.display_name) DESC

***** Provides a list of what emotion follows the previous in count order *****
MATCH (emotion:Perception)<-[:best_maps_to]-(experience2)<-[:followed_by]-(experience1:Experience)-[:best_maps_to]->(per1:Perception)
WHERE per1.display_name = "self doubt"
RETURN distinct emotion.display_name, count(experience2)
ORDER BY count(experience2) DESC

***** Provides an ordered list of how many times meditations a perceptions shows up in *****

***** Provides an ordered list of how man perceptions I experienced *****
MATCH (user:Atman)<-[:performed_by]-(med:Meditation_Instance)-[:perceived]->(exp:Experience)-[:best_maps_to]->(per:Perception)
WHERE user.first_name = 'Noah'
RETURN distinct ID(med), med.display_name, count(distinct exp)
ORDER BY count(distinct exp) DESC

***** Provides an ordred list of the of all ALtered State Trackers and a collection of emotions perceived  *****

MATCH (n:Atman)<-[:performed_by]-(track:Altered_State_Observer)<-[:part_of]-(inst:Meditation_Instance)-[:perceived]->(exp:Experience)-[:best_maps_to]->(p:Perception)
RETURN distinct ID(track), n.display_name, track.date_of_ingestion, count(distinct inst), count(distinct exp), collect(p.display_name)

***** List out the meditations that users are working on  *****

MATCH (n:Atman)<-[:performed_by]-(med:Meditation_Instance)-[:perceived]->(exp:Experience)
RETURN distinct n.display_name, ID(med), med.start_time, med.date_of_meditation, med.display_name, count(distinct exp)
ORDER BY med.start_time


***** This query accepts a user and emotion, and lists out over time which one they perceive the most
MATCH (n:Atman)<-[:performed_by]-(med:Meditation_Instance)-[:perceived]->(exp:Experience),
(per1:Perception)<-[best_maps_to]-(exp)-[:followed_by]->(exp2:Experience)-[:best_maps_to]->(per2:Perception)
WHERE n.first_name = "Noah" AND per1.display_name = "contentment"
RETURN distinct per2.display_name, avg(exp2.utc_timestamp_of_experience-exp.utc_timestamp_of_experience)
ORDER BY  avg(exp2.utc_timestamp_of_experience-exp.utc_timestamp_of_experience)

***** What is the average distance between reported emotions? for all users ******

***** How many experiences has a user reported? ******
MATCH (n:Atman)<-[:performed_by]-(med:Meditation_Instance)-[:perceived]->(exp:Experience)
WHERE n.first_name="Noah"
RETURN count(distinct ex)
